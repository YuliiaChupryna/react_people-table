{"version":3,"sources":["App.js","PersonName.js","Person.js","PeopleTable.js","NewPerson.js","people.js","index.js"],"names":["PersonName","_ref","name","sex","react_default","a","createElement","className","Person","titles","person","isSelected","selectPerson","cn","concat","century","person--selected","onClick","map","title","person--born-before-1650","born","person--died-after-1800","died","src_PersonName","person--male","person--female","Infinity","person--old","age","mother","father","children","child","index","Fragment","length","PeopleTable","state","selectedPersonId","id","_this","setState","_this2","this","_this$props","props","people","setSortBy","sortingTitle","toUpperCase","title--active","currentPerson","src_Person","key","React","Component","date","Date","NewPerson","handleNameChange","value","target","replace","handleSelect","_ref2","Object","defineProperty","handleSubmit","event","preventDefault","addPerson","updateChildren","updateSortedPeople","_this$state","trim","prevState","_this$state2","_this$props2","peopleList","years","onSubmit","type","placeholder","onChange","required","htmlFor","toConsumableArray","year","filter","yearOfDeath","Number","getFullYear","woman","currentWoman","man","currentMan","availableYears","minWomanBirth","Math","min","apply","minManBirth","i","max","push","getPeopleWithChildren","listOfPeople","objectSpread2","ceil","App","allPeople","currentSortingTitle","searchingItem","reversed","handleSearchingInputChange","toLowerCase","getSearchedPeople","searchingName","includes","getSortedPeople","sort","firstPerson","secondPerson","localeCompare","reverse","src_NewPerson","src_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.5a5ac79c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport PeopleTable from './PeopleTable';\nimport NewPerson from './NewPerson';\nimport people from './people';\n\nconst date = new Date();\nconst availableYears = [];\n\nconst minWomanBirth = Math.min(...people\n  .filter(person => person.sex === 'f')\n  .map(person => person.born));\nconst minManBirth = Math.min(...people\n  .filter(person => person.sex === 'm')\n  .map(person => person.born));\n\nfor (let i = Math.max(minWomanBirth, minManBirth) + 16;\n  i <= date.getFullYear(); i += 1) {\n  availableYears.push(i);\n}\n\nconst getPeopleWithChildren = listOfPeople => (\n  listOfPeople.map((person, index) => ({\n    ...person,\n    children: listOfPeople\n      .filter(child => (\n        child.father === person.name || child.mother === person.name)),\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    id: index + 1,\n  }))\n);\n\nclass App extends React.Component {\n  state = {\n    allPeople: getPeopleWithChildren(people),\n    currentSortingTitle: '',\n    searchingItem: '',\n    reversed: false,\n  };\n\n  handleSearchingInputChange = ({ target: { value } }) => {\n    this.setState({\n      searchingItem: value.toLowerCase(),\n    });\n  };\n\n  getSearchedPeople = (listOfPeople, searchingName) => (\n    listOfPeople.filter(person => (\n      person.name.toLowerCase().includes(searchingName)\n      || (person.father || '').toLowerCase()\n        .includes(searchingName)\n      || (person.mother || '').toLowerCase()\n        .includes(searchingName)\n    )));\n\n  getSortedPeople = (listOfPeople, sortingTitle) => (\n    listOfPeople.sort((firstPerson, secondPerson) => (\n      typeof firstPerson[sortingTitle] === 'string'\n        ? firstPerson[sortingTitle].localeCompare(secondPerson[sortingTitle])\n        : firstPerson[sortingTitle] - secondPerson[sortingTitle]\n    )));\n\n  setSortBy = (sortingTitle) => {\n    this.setState(({ allPeople, currentSortingTitle, reversed }) => ({\n      allPeople: currentSortingTitle === sortingTitle\n        ? [...allPeople].reverse()\n        : this.getSortedPeople(allPeople, sortingTitle),\n      reversed: currentSortingTitle === sortingTitle ? !reversed : false,\n      currentSortingTitle: sortingTitle,\n    }));\n  };\n\n  addPerson = (name, sex, born, died, mother, father) => {\n    this.setState(prevState => ({\n      allPeople: [\n        ...prevState.allPeople,\n        {\n          name,\n          sex,\n          born,\n          died,\n          mother,\n          father,\n          children: prevState.allPeople\n            .filter(child => (\n              child.father === name || child.mother === name)),\n          age: died < Infinity ? died - born : date.getFullYear() - born,\n          century:\n            died < Infinity ? Math.ceil(died / 100)\n              : Math.ceil(date.getFullYear() / 100),\n          id:\n            Math.max(...prevState.allPeople.map(person => person.id)) + 1,\n        },\n      ],\n    }));\n  };\n\n  updateChildren = () => {\n    this.setState(prevState => ({\n      allPeople:\n        prevState.allPeople.map(person => (\n          {\n            ...person,\n            children: prevState.allPeople\n              .filter(child => (\n                child.father === person.name || child.mother === person.name)),\n          }\n        )),\n    }));\n  };\n\n  updateSortedPeople = () => {\n    this.setState(prevState => ({\n      allPeople: prevState.reversed\n        ? this\n          .getSortedPeople(prevState.allPeople, prevState.currentSortingTitle)\n          .reverse()\n        : this\n          .getSortedPeople(prevState.allPeople, prevState.currentSortingTitle),\n    }));\n  };\n\n  render() {\n    const { currentSortingTitle, searchingItem, allPeople } = this.state;\n\n    return (\n      <div className=\"people\">\n        <NewPerson\n          addPerson={this.addPerson}\n          updateChildren={this.updateChildren}\n          updateSortedPeople={this.updateSortedPeople}\n          peopleList={allPeople}\n          years={availableYears}\n        />\n        <input\n          onChange={this.handleSearchingInputChange}\n          className=\"people__search\"\n          type=\"text\"\n          placeholder=\"Search\"\n        />\n        <PeopleTable\n          people={this.getSearchedPeople(allPeople, searchingItem)}\n          setSortBy={this.setSortBy}\n          sortingTitle={currentSortingTitle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PersonName = ({ name, sex }) => (\n  <span className={sex === 'm' ? 'person--man' : 'person--woman'}>\n    {name}\n  </span>\n);\n\nPersonName.propTypes = {\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string.isRequired,\n};\nexport default PersonName;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport cn from 'classnames';\nimport PersonName from './PersonName';\n\nconst Person = ({ titles, person, isSelected, selectPerson }) => (\n  <tr\n    className={\n      cn(\n        'person',\n        `person--lived-in-${person.century}`,\n        { 'person--selected': isSelected }\n      )}\n    onClick={selectPerson}\n  >\n    {titles.map((title) => {\n      switch (title) {\n        case 'name':\n          return (\n            <td className={cn(\n              { 'person--born-before-1650': person.born < 1650 },\n              { 'person--died-after-1800': person.died > 1800 },\n            )}\n            >\n              <PersonName name={person.name} sex={person.sex} />\n            </td>\n          );\n        case 'sex':\n          return (\n            <td className={cn(\n              { 'person--male': person.sex === 'm' },\n              { 'person--female': person.sex === 'f' },\n            )}\n            >\n              {person.sex}\n            </td>\n          );\n        case 'died':\n          return (\n            <td>{person.died < Infinity ? person.died : 'alive'}</td>\n          );\n        case 'age':\n          return (\n            <td\n              className={cn({ 'person--old': person.age >= 65 })}\n            >\n              {person.age}\n            </td>\n          );\n        case 'mother':\n          return (\n            <td>\n              {person.mother !== '' && (\n                <PersonName name={person.mother} sex=\"f\" />\n              )}\n            </td>\n          );\n        case 'father':\n          return (\n            <td>\n              {person.father !== '' && (\n                <PersonName name={person.father} sex=\"m\" />\n              )}\n            </td>\n          );\n        case 'children':\n          return (\n            <td>\n              {person.children.map((child, index) => (\n                <>\n                  <PersonName name={child.name} sex={child.sex} />\n                  {index !== person.children.length - 1 && ', '}\n                </>\n              ))}\n            </td>\n          );\n        default:\n          return (\n            <td>{person[title]}</td>\n          );\n      }\n    })}\n  </tr>\n);\n\nPerson.propTypes = {\n  titles: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    mother: PropTypes.string.isRequired,\n    father: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      sex: PropTypes.string,\n    })).isRequired,\n  }).isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  selectPerson: PropTypes.func.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Person from './Person';\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectedPersonId: 0,\n  };\n\n  selectPerson = (id) => {\n    if (id === this.state.selectedPersonId) {\n      this.setState({ selectedPersonId: 0 });\n    } else {\n      this.setState({ selectedPersonId: id });\n    }\n  };\n\n  render() {\n    const { people, setSortBy, sortingTitle } = this.props;\n    const { selectedPersonId } = this.state;\n    const titles = [\n      'id',\n      'name',\n      'sex',\n      'born',\n      'died',\n      'age',\n      'century',\n      'mother',\n      'father',\n      'children',\n    ];\n\n    return (\n      <table className=\"people-table\">\n        <thead>\n          <tr>\n            {titles.map((title) => {\n              switch (title) {\n                case 'mother':\n                case 'father':\n                case 'children':\n                  return (\n                    <th>{title.toUpperCase()}</th>\n                  );\n                default:\n                  return (\n                    <th\n                      className={\n                        cn(\n                          'title--sortable',\n                          { 'title--active': sortingTitle === title }\n                        )}\n                      onClick={() => setSortBy(title)}\n                    >\n                      {title.toUpperCase()}\n                    </th>\n                  );\n              }\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(currentPerson => (\n            <Person\n              key={currentPerson.id}\n              titles={titles}\n              person={currentPerson}\n              isSelected={currentPerson.id === selectedPersonId}\n              selectPerson={() => (this.selectPerson(currentPerson.id))}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    mother: PropTypes.string.isRequired,\n    father: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      sex: PropTypes.string,\n    })).isRequired,\n  })).isRequired,\n  setSortBy: PropTypes.func.isRequired,\n  sortingTitle: PropTypes.string.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst date = new Date();\n\nclass NewPerson extends React.Component {\n  state = {\n    name: '',\n    sex: '',\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n  };\n\n  handleNameChange = ({ target: { value } }) => {\n    this.setState({\n      name: value.replace(/^ |[^a-zA-Z|\\s]+/g, ''),\n    });\n  };\n\n  handleSelect = ({ target: { value } }, key) => {\n    this.setState({\n      [key]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { addPerson, updateChildren, updateSortedPeople } = this.props;\n    const { name, sex, born, died, mother, father } = this.state;\n\n    addPerson(name.trim(), sex, born, died, mother, father);\n    updateChildren();\n    updateSortedPeople();\n\n    this.setState(prevState => ({\n      name: '',\n      sex: prevState.sex,\n      born: '',\n      died: '',\n      mother: '',\n      father: '',\n    }));\n  };\n\n  render() {\n    const\n      { name, sex, born, died, mother, father } = this.state;\n    const { peopleList, years } = this.props;\n\n    return (\n      <form\n        className=\"new-person\"\n        onSubmit={this.handleSubmit}\n      >\n\n        <input\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter name\"\n          onChange={this.handleNameChange}\n          className=\"new-person__name\"\n          required\n        />\n\n        <input\n          type=\"radio\"\n          name=\"sex\"\n          value=\"m\"\n          required={sex === ''}\n          id=\"male\"\n          onChange={event => this.handleSelect(event, 'sex')}\n        />\n        <label htmlFor=\"male\">male</label>\n        <input\n          type=\"radio\"\n          name=\"sex\"\n          value=\"f\"\n          required={sex === ''}\n          id=\"female\"\n          onChange={event => this.handleSelect(event, 'sex')}\n        />\n        <label htmlFor=\"female\">female</label>\n\n        <br />\n\n        <select\n          value={born}\n          onChange={event => this.handleSelect(event, 'born')}\n          className=\"new-person__year\"\n          required\n        >\n          <option value=\"\">born</option>\n          {[...years].map(year => (\n            <option value={year} key={year}>{year}</option>\n          ))}\n        </select>\n\n        <select\n          value={died}\n          onChange={event => this.handleSelect(event, 'died')}\n          className=\"new-person__year\"\n          required\n        >\n          <option value=\"\">died</option>\n          {born && years\n            .filter(yearOfDeath => yearOfDeath >= Number(born)\n              && yearOfDeath <= Number(born) + 149)\n            .map(year => (\n              <option value={year} key={year}>{year}</option>\n            ))}\n          {date.getFullYear() - born < 150\n          && (<option value={Infinity}>alive</option>)}\n        </select>\n\n        <br />\n\n        <select\n          value={mother}\n          onChange={event => this.handleSelect(event, 'mother')}\n          className=\"new-person__parent\"\n          required\n        >\n          <option value=\"\">Choose mother</option>\n          {born\n          && peopleList\n            .filter(person => person.sex === 'f' && person.died >= born\n              && person.born <= born - 16)\n            .map(woman => woman.name)\n            .map(currentWoman => (\n              <option\n                value={currentWoman}\n                key={currentWoman}\n              >\n                {currentWoman}\n              </option>\n            ))}\n        </select>\n\n        <select\n          value={father}\n          onChange={event => this.handleSelect(event, 'father')}\n          className=\"new-person__parent\"\n          required\n        >\n          <option value=\"\">Choose father</option>\n          {born\n          && peopleList\n            .filter(person => person.sex === 'm' && person.died >= born\n              && person.born <= born - 16)\n            .map(man => man.name)\n            .map(currentMan => (\n              <option value={currentMan} key={currentMan}>{currentMan}</option>\n            ))}\n        </select>\n\n        <br />\n\n        <button\n          type=\"submit\"\n          className=\"new-person__submit\"\n        >\n          Add Person\n        </button>\n      </form>\n\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  peopleList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    mother: PropTypes.string.isRequired,\n    father: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      sex: PropTypes.string,\n    })).isRequired,\n  })).isRequired,\n  years: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n  addPerson: PropTypes.func.isRequired,\n  updateChildren: PropTypes.func.isRequired,\n  updateSortedPeople: PropTypes.func.isRequired,\n};\n\nexport default NewPerson;\n","const people = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    father: 'Carel Haverbeke',\n    mother: 'Maria van Brussel',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    father: 'Petrus de Milliano',\n    mother: 'Sophia van Damme',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    father: 'Frederik de Rycke',\n    mother: 'Laurentia van Vlaenderen',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    father: 'Jacobus van Brussel',\n    mother: 'Joanna van Rooten',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    father: 'Emile Haverbeke',\n    mother: 'Emma de Milliano',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    father: 'Jacobus Bernardus van Brussel',\n    mother: null,\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    father: 'N. van Haverbeke',\n    mother: null,\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    father: 'Henry Aernoudts',\n    mother: 'Sidonie Coene',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    father: 'Carolus Haverbeke',\n    mother: 'Maria Sturm',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    father: 'Carel de Causmaecker',\n    mother: 'Joanna Claes',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    father: 'Lieven van Haverbeke',\n    mother: null,\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    father: 'Daniel Haverbeke',\n    mother: 'Joanna de Pape',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    father: 'Willem Haverbeke',\n    mother: 'Petronella Wauters',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    father: 'Pauwels van Haverbeke',\n    mother: 'Lievijne Jans',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    father: 'Bernardus de Causmaecker',\n    mother: null,\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    father: 'Lieven Haverbeke',\n    mother: 'Elisabeth Hercke',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    father: 'Jan Francies Haverbeke',\n    mother: 'Petronella de Decker',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    father: 'Jan Frans van Brussel',\n    mother: 'Joanna de Causmaecker',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    father: 'Pieter Bernard Haverbeke',\n    mother: 'Livina de Vrieze',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    father: 'Jan Haverbeke',\n    mother: 'Maria de Rycke',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    father: null,\n    mother: null,\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    father: 'Lieven de Causmaecker',\n    mother: 'Livina Haverbeke',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    father: 'Lieven Lammens',\n    mother: 'Livina de Vrieze',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    father: 'Joos de Decker',\n    mother: 'Petronella van de Steene',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    father: 'Vincent de Pape',\n    mother: 'Petronella Wauters',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    father: 'Lieven Haverbeke',\n    mother: 'Elisabeth Hercke',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    father: 'Pieter Haverbeke',\n    mother: 'Anna van Hecke',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    father: 'Vincent de Pape',\n    mother: 'Petronella Wauters',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    father: 'Pieter Bernard Haverbeke',\n    mother: 'Livina de Vrieze',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    father: 'Emile Haverbeke',\n    mother: 'Emma de Milliano',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    father: 'Pieter de Decker',\n    mother: 'Livina Haverbeke',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    father: 'Jan Sierens',\n    mother: 'Maria van Waes',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    father: 'Jan Haverbeke',\n    mother: 'Maria de Rycke',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    father: 'Pieter Antone Haverbeke',\n    mother: 'Livina Sierens',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    father: 'Willem Hercke',\n    mother: 'Margriet de Brabander',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    father: 'Lieven Haverbeke',\n    mother: 'Elisabeth Hercke',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    father: 'Paschasius van Hecke',\n    mother: 'Martijntken Beelaert',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    father: 'Charles Sturm',\n    mother: 'Seraphina Spelier',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    father: 'Jan van Brussel',\n    mother: 'Elisabeth Haverbeke',\n  },\n];\n\nexport default people;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}