{"version":3,"sources":["App.js","PersonName.js","Person.js","PeopleTable.js","NewPerson.js","people.js","index.js"],"names":["PersonName","_ref","person","tdNameClassName","react_default","a","createElement","className","name","Person","isSelected","selectPerson","currentPerson","concat","century","trClassName","onClick","id","src_PersonName","born","died","sex","Infinity","age","mother","father","children","PeopleTable","state","selectedPersonId","_this","setState","prevState","_this2","this","_this$props","props","people","setSortBy","sortingTitle","map","title","toUpperCase","src_Person","key","React","Component","date","Date","NewPerson","handleNameChange","value","target","replace","handleSelectSex","_ref2","handleSelectBorn","_ref3","handleSelectDied","_ref4","handleSelectMother","_ref5","handleSelectFather","_ref6","handleSubmit","event","preventDefault","addPerson","updateChildren","updateSortedPeople","_this$state","trim","_this$state2","_this$props2","peopleList","years","onSubmit","type","placeholder","onChange","required","htmlFor","Object","toConsumableArray","year","filter","yearOfDeath","Number","getFullYear","woman","currentWoman","man","currentMan","availableYears","minWomanBirth","Math","min","apply","minManBirth","i","max","push","getPeopleWithChildren","listOfPeople","index","objectSpread2","child","currentChild","join","ceil","App","allPeople","currentSortingTitle","searchingItem","reversed","getSortedPeople","reverse","handleSearchingInputChange","getSearchedPeople","searchingName","toLowerCase","includes","sort","firstPerson","secondPerson","localeCompare","visiblePeople","src_NewPerson","src_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.ccc8cbbf.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport PeopleTable from './PeopleTable';\nimport NewPerson from './NewPerson';\nimport people from './people';\n\nconst date = new Date();\nconst availableYears = [];\nconst minWomanBirth = Math.min(...people\n  .filter(person => person.sex === 'f')\n  .map(person => person.born));\nconst minManBirth = Math.min(...people\n  .filter(person => person.sex === 'm')\n  .map(person => person.born));\n\nfor (let i = Math.max(minWomanBirth, minManBirth) + 16;\n  i <= date.getFullYear(); i += 1) {\n  availableYears.push(i);\n}\n\nconst getPeopleWithChildren = listOfPeople => (\n  listOfPeople.map((person, index) => ({\n    ...person,\n    children: listOfPeople\n      .filter(child => (\n        child.father === person.name || child.mother === person.name))\n      .map(currentChild => currentChild.name)\n      .join(', '),\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    id: index + 1,\n  }))\n);\n\nclass App extends React.Component {\n  state = {\n    allPeople: getPeopleWithChildren(people),\n    currentSortingTitle: '',\n    searchingItem: '',\n    reversed: false,\n  };\n\n  addPerson = (name, sex, born, died, mother, father) => {\n    this.setState(prevState => ({\n      allPeople: [\n        ...prevState.allPeople,\n        {\n          name,\n          sex,\n          born,\n          died,\n          mother,\n          father,\n          children: prevState.allPeople\n            .filter(child => (\n              child.father === name || child.mother === name))\n            .map(currentChild => currentChild.name)\n            .join(', '),\n          age: died === Infinity ? date.getFullYear() - born : died - born,\n          century:\n            died === Infinity ? Math.ceil(date.getFullYear() / 100)\n              : Math.ceil(died / 100),\n          id:\n            Math.max(...[...prevState.allPeople].map(person => person.id)) + 1,\n        },\n      ],\n    }));\n  };\n\n  updateChildren = () => {\n    this.setState(prevState => ({\n      allPeople:\n        prevState.allPeople.map(person => (\n          {\n            ...person,\n            children: prevState.allPeople\n              .filter(child => (\n                child.father === person.name || child.mother === person.name))\n              .map(currentChild => currentChild.name)\n              .join(', '),\n          }\n        )),\n    }));\n  };\n\n  updateSortedPeople = () => {\n    this.setState(prevState => ({\n      allPeople: prevState.reversed\n        ? this\n          .getSortedPeople(prevState.allPeople, prevState.currentSortingTitle)\n          .reverse()\n        : this\n          .getSortedPeople(prevState.allPeople, prevState.currentSortingTitle),\n    }));\n  };\n\n  handleSearchingInputChange = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      searchingItem: value,\n    }));\n  };\n\n  getSearchedPeople = (listOfPeople, searchingName) => (\n    listOfPeople.filter(person => (\n      person.name.toLowerCase().includes(searchingName.toLowerCase())\n        || (person.father || '').toLowerCase()\n          .includes(searchingName.toLowerCase())\n        || (person.mother || '').toLowerCase()\n          .includes(searchingName.toLowerCase())\n    )));\n\n  getSortedPeople = (listOfPeople, sortingTitle) => (\n    listOfPeople.sort((firstPerson, secondPerson) => (\n      typeof firstPerson[sortingTitle] === 'string'\n        ? firstPerson[sortingTitle].localeCompare(secondPerson[sortingTitle])\n        : firstPerson[sortingTitle] - secondPerson[sortingTitle]\n    )));\n\n  setSortBy = (sortingTitle) => {\n    this.setState(({ allPeople, currentSortingTitle }) => ({\n      allPeople: currentSortingTitle === sortingTitle\n        ? [...allPeople].reverse()\n        : this.getSortedPeople(allPeople, sortingTitle),\n      reversed: currentSortingTitle === sortingTitle,\n      currentSortingTitle: sortingTitle,\n    }));\n  };\n\n  render() {\n    const { currentSortingTitle, searchingItem, allPeople } = this.state;\n    const visiblePeople = searchingItem\n      ? [...this.getSearchedPeople(allPeople, searchingItem)]\n      : [...allPeople];\n\n    return (\n      <div className=\"people\">\n        <NewPerson\n          addPerson={this.addPerson}\n          updateChildren={this.updateChildren}\n          updateSortedPeople={this.updateSortedPeople}\n          peopleList={allPeople}\n          years={availableYears}\n        />\n        <input\n          onChange={this.handleSearchingInputChange}\n          className=\"people__search\"\n          type=\"text\"\n          placeholder=\"Search\"\n        />\n        <PeopleTable\n          people={visiblePeople}\n          setSortBy={this.setSortBy}\n          sortingTitle={currentSortingTitle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PersonName = ({ person, tdNameClassName }) => (\n  <td className={tdNameClassName(person)}>\n    {person.name}\n  </td>\n);\n\nPersonName.propTypes = {\n  person: PropTypes.oneOfType(Object).isRequired,\n  tdNameClassName: PropTypes.func.isRequired,\n};\nexport default PersonName;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport PersonName from './PersonName';\n\nconst Person = ({ person, isSelected, selectPerson }) => {\n  const trClassName = (currentPerson) => {\n    let name = 'person';\n\n    name += ` person--lived-in-${currentPerson.century}`;\n    name += isSelected ? ' person--selected' : '';\n\n    return name;\n  };\n\n  const tdNameClassName = (currentPerson) => {\n    let name = '';\n\n    if (currentPerson.born < 1650) {\n      name += 'person--born-before-1650';\n    }\n\n    if (currentPerson.died > 1800) {\n      name += 'person--died-after-1800';\n    }\n\n    name += currentPerson.sex === 'm' ? ' person--man' : ' person--woman';\n\n    return name;\n  };\n\n  return (\n    <tr\n      className={trClassName(person)}\n      onClick={selectPerson}\n    >\n      <td>{person.id}</td>\n      <PersonName\n        person={person}\n        tdNameClassName={tdNameClassName}\n      />\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died < Infinity ? person.died : ''}</td>\n      <td\n        className={person.age >= 65 ? 'person--old' : ''}\n      >\n        {person.age}\n      </td>\n      <td>{person.century}</td>\n      <td>{person.mother}</td>\n      <td>{person.father}</td>\n      <td>{person.children}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.oneOfType(Object).isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  selectPerson: PropTypes.func.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectedPersonId: 0,\n  };\n\n  selectPerson = (id) => {\n    if (id === this.state.selectedPersonId) {\n      this.setState(prevState => (\n        { selectedPersonId: 0 }\n      ));\n    } else {\n      this.setState(prevState => (\n        { selectedPersonId: id }\n      ));\n    }\n  };\n\n  render() {\n    const { people, setSortBy, sortingTitle } = this.props;\n    const { selectedPersonId } = this.state;\n    const titles = ['id', 'name', 'sex', 'born', 'died', 'age', 'century'];\n\n    return (\n      <table className=\"people-table\">\n        <thead>\n          <tr>\n            {titles.map(title => (\n              <th\n                className={title === sortingTitle\n                  ? 'title--with-sorting title--sorting'\n                  : 'title--with-sorting'}\n                onClick={() => setSortBy(title)}\n              >\n                {title.toUpperCase()}\n              </th>\n            ))}\n            <th className=\"title--without-sorting\">MOTHER</th>\n            <th className=\"title--without-sorting\">FATHER</th>\n            <th className=\"title--without-sorting\">CHILDREN</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(currentPerson => (\n            <Person\n              key={currentPerson.id}\n              person={currentPerson}\n              isSelected={currentPerson.id === selectedPersonId}\n              selectPerson={() => (this.selectPerson(currentPerson.id))}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setSortBy: PropTypes.func.isRequired,\n  sortingTitle: PropTypes.string.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst date = new Date();\n\nclass NewPerson extends React.Component {\n  state = {\n    name: '',\n    sex: '',\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n  };\n\n  handleNameChange = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      name: value.replace(/^ |[^a-z|\\s]+/g, ''),\n    }));\n  };\n\n  handleSelectSex = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      sex: value,\n    }));\n  };\n\n  handleSelectBorn = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      born: value,\n    }));\n  };\n\n  handleSelectDied = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      died: value,\n    }));\n  };\n\n  handleSelectMother = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      mother: value,\n    }));\n  };\n\n  handleSelectFather = ({ target: { value } }) => {\n    this.setState(prevState => ({\n      father: value,\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { addPerson, updateChildren, updateSortedPeople } = this.props;\n    const { name, sex, born, died, mother, father } = this.state;\n\n    addPerson(name.trim(), sex, born, died, mother, father);\n    updateChildren();\n    updateSortedPeople();\n\n    this.setState(prevState => ({\n      name: '',\n      sex: prevState.sex,\n      born: '',\n      died: '',\n      mother: '',\n      father: '',\n    }));\n  };\n\n  render() {\n    const\n      { name, sex, born, died, mother, father } = this.state;\n    const { peopleList, years } = this.props;\n\n    return (\n      <form\n        className=\"new-person\"\n        onSubmit={this.handleSubmit}\n      >\n\n        <input\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter name\"\n          onChange={this.handleNameChange}\n          className=\"new-person__name\"\n          required\n        />\n\n        <input\n          type=\"radio\"\n          name=\"sex\"\n          value=\"m\"\n          id=\"male\"\n          onChange={event => this.handleSelectSex(event)}\n        />\n        <label htmlFor=\"male\" className={`new-person__${sex}`}>male</label>\n        <input\n          type=\"radio\"\n          name=\"sex\"\n          value=\"f\"\n          id=\"female\"\n          onChange={event => this.handleSelectSex(event)}\n        />\n        <label htmlFor=\"female\" className={`new-person__${sex}`}>female</label>\n\n        <br />\n\n        <select\n          value={born}\n          onChange={event => this.handleSelectBorn(event)}\n          className=\"new-person__year\"\n          required\n        >\n          <option value=\"\">born</option>\n          {[...years].map(year => (\n            <option value={year} key={year}>{year}</option>\n          ))}\n        </select>\n\n        <select\n          value={died}\n          onChange={event => this.handleSelectDied(event)}\n          className=\"new-person__year\"\n          required\n        >\n          <option value=\"\">died</option>\n          {born && years\n            .filter(yearOfDeath => yearOfDeath >= Number(born)\n              && yearOfDeath <= Number(born) + 149)\n            .map(year => (\n              <option value={year} key={year}>{year}</option>\n            ))}\n          {date.getFullYear() - born < 150\n          && (<option value={Infinity}>alive</option>)}\n        </select>\n\n        <br />\n\n        <select\n          value={mother}\n          onChange={event => this.handleSelectMother(event)}\n          className=\"new-person__parent\"\n          required\n        >\n          <option value=\"\">Choose mother</option>\n          {born\n          && peopleList\n            .filter(person => person.sex === 'f' && person.died >= born\n              && person.born <= born - 16)\n            .map(woman => woman.name)\n            .map(currentWoman => (\n              <option\n                value={currentWoman}\n                key={currentWoman}\n              >\n                {currentWoman}\n              </option>\n            ))}\n        </select>\n\n        <select\n          value={father}\n          onChange={event => this.handleSelectFather(event)}\n          className=\"new-person__parent\"\n          required\n        >\n          <option value=\"\">Choose father</option>\n          {born\n          && peopleList\n            .filter(person => person.sex === 'm' && person.died >= born\n              && person.born <= born - 16)\n            .map(man => man.name)\n            .map(currentMan => (\n              <option value={currentMan} key={currentMan}>{currentMan}</option>\n            ))}\n        </select>\n\n        <br />\n\n        <button\n          type=\"submit\"\n          className=\"new-person__submit\"\n        >\n          Add Person\n        </button>\n      </form>\n\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  peopleList: PropTypes.oneOfType(Array).isRequired,\n  years: PropTypes.oneOfType(Array).isRequired,\n  addPerson: PropTypes.func.isRequired,\n  updateChildren: PropTypes.func.isRequired,\n  updateSortedPeople: PropTypes.func.isRequired,\n};\n\nexport default NewPerson;\n","const people = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    father: 'Carel Haverbeke',\n    mother: 'Maria van Brussel',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    father: 'Petrus de Milliano',\n    mother: 'Sophia van Damme',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    father: 'Frederik de Rycke',\n    mother: 'Laurentia van Vlaenderen',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    father: 'Jacobus van Brussel',\n    mother: 'Joanna van Rooten',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    father: 'Emile Haverbeke',\n    mother: 'Emma de Milliano',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    father: 'Jacobus Bernardus van Brussel',\n    mother: null,\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    father: 'N. van Haverbeke',\n    mother: null,\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    father: 'Henry Aernoudts',\n    mother: 'Sidonie Coene',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    father: 'Carolus Haverbeke',\n    mother: 'Maria Sturm',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    father: 'Carel de Causmaecker',\n    mother: 'Joanna Claes',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    father: 'Lieven van Haverbeke',\n    mother: null,\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    father: 'Daniel Haverbeke',\n    mother: 'Joanna de Pape',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    father: 'Willem Haverbeke',\n    mother: 'Petronella Wauters',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    father: 'Pauwels van Haverbeke',\n    mother: 'Lievijne Jans',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    father: 'Bernardus de Causmaecker',\n    mother: null,\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    father: 'Lieven Haverbeke',\n    mother: 'Elisabeth Hercke',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    father: 'Jan Francies Haverbeke',\n    mother: 'Petronella de Decker',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    father: 'Jan Frans van Brussel',\n    mother: 'Joanna de Causmaecker',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    father: 'Pieter Bernard Haverbeke',\n    mother: 'Livina de Vrieze',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    father: 'Jan Haverbeke',\n    mother: 'Maria de Rycke',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    father: null,\n    mother: null,\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    father: 'Lieven de Causmaecker',\n    mother: 'Livina Haverbeke',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    father: 'Lieven Lammens',\n    mother: 'Livina de Vrieze',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    father: 'Joos de Decker',\n    mother: 'Petronella van de Steene',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    father: 'Vincent de Pape',\n    mother: 'Petronella Wauters',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    father: 'Lieven Haverbeke',\n    mother: 'Elisabeth Hercke',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    father: 'Pieter Haverbeke',\n    mother: 'Anna van Hecke',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    father: 'Vincent de Pape',\n    mother: 'Petronella Wauters',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    father: 'Pieter Bernard Haverbeke',\n    mother: 'Livina de Vrieze',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    father: 'Emile Haverbeke',\n    mother: 'Emma de Milliano',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    father: 'Pieter de Decker',\n    mother: 'Livina Haverbeke',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    father: 'Jan Sierens',\n    mother: 'Maria van Waes',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    father: 'Jan Haverbeke',\n    mother: 'Maria de Rycke',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    father: 'Pieter Antone Haverbeke',\n    mother: 'Livina Sierens',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    father: 'Willem Hercke',\n    mother: 'Margriet de Brabander',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    father: 'Lieven Haverbeke',\n    mother: 'Elisabeth Hercke',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    father: 'Paschasius van Hecke',\n    mother: 'Martijntken Beelaert',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    father: 'Charles Sturm',\n    mother: 'Seraphina Spelier',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    father: 'Jan van Brussel',\n    mother: 'Elisabeth Haverbeke',\n  },\n];\n\nexport default people;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}