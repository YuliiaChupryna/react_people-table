{"version":3,"sources":["PersonName.js","Person.js","getDataApi.js","NewPerson.js","PeopleTable.js","App.js","index.js"],"names":["PersonName","_ref","name","sex","react_default","a","createElement","className","defaultProps","Person","titles","person","match","history","location","cn","concat","century","person--selected","toLowerCase","split","join","params","personName","onClick","push","pathname","search","map","title","person--born-before-1650","born","person--died-after-1800","died","src_PersonName","person--male","person--female","Infinity","person--old","age","mother","father","children","child","index","Fragment","length","getData","url","fetch","then","response","json","date","Date","NewPerson","currentPeople","addPerson","updateChildren","_useState","useState","_useState2","Object","slicedToArray","setName","_useState3","_useState4","setSex","_useState5","_useState6","setBorn","_useState7","_useState8","setDied","_useState9","_useState10","setMother","_useState11","_useState12","setFather","setters","handleSelect","_ref3","key","value","target","availableYears","minWomanBirth","Math","min","apply","toConsumableArray","filter","minManBirth","i","max","getFullYear","onSubmit","event","preventDefault","trim","type","placeholder","onChange","_ref2","replace","required","id","htmlFor","year","yearOfDeath","Number","woman","currentWoman","man","currentMan","getPeopleWithChildren","listOfPeople","objectSpread2","ceil","PeopleTable","people","setPeople","useEffect","loadPeopleFromServer","searchingName","regenerator_default","async","_context","prev","next","awrap","sent","t0","stop","prevPeople","urlParams","URLSearchParams","getSortedPeople","sortingTitle","sort","firstPerson","secondPerson","localeCompare","visiblePeople","get","includes","sortingOrder","reverse","setSortBy","react_router","path","exact","render","src_NewPerson","react_router_dom","to","lib","debounceTimeout","delete","set","toString","toUpperCase","title--active","currentPerson","src_Person","App","component","ReactDOM","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.b2978ec2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PersonName = ({ name, sex }) => (\n  <span className={sex === 'm' ? 'person--man' : 'person--woman'}>\n    {name}\n  </span>\n);\n\nPersonName.propTypes = {\n  name: PropTypes.string,\n  sex: PropTypes.string.isRequired,\n};\n\nPersonName.defaultProps = {\n  name: '',\n};\n\nexport default PersonName;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport cn from 'classnames';\nimport PersonName from './PersonName';\n\nconst Person = ({ titles, person, match, history, location }) => {\n  const selectPerson = () => {\n    history.push({\n      pathname: `/people/${person.name.toLowerCase().split(' ').join('-')}`,\n      search: location.search,\n    });\n  };\n\n  return (\n    <tr\n      className={\n        cn(\n          'person',\n          `person--lived-in-${person.century}`,\n          {\n            'person--selected':\n              person.name.toLowerCase().split(' ').join('-')\n              === match.params.personName,\n          }\n        )}\n      onClick={selectPerson}\n    >\n      {titles.map((title) => {\n        switch (title) {\n          case 'name':\n            return (\n              <td className={cn(\n                { 'person--born-before-1650': person.born < 1650 },\n                { 'person--died-after-1800': person.died > 1800 },\n              )}\n              >\n                <PersonName name={person.name} sex={person.sex} />\n              </td>\n            );\n          case 'sex':\n            return (\n              <td className={cn(\n                { 'person--male': person.sex === 'm' },\n                { 'person--female': person.sex === 'f' },\n              )}\n              >\n                {person.sex}\n              </td>\n            );\n          case 'died':\n            return (\n              <td>{person.died < Infinity ? person.died : 'alive'}</td>\n            );\n          case 'age':\n            return (\n              <td\n                className={cn({ 'person--old': person.age >= 65 })}\n              >\n                {person.age}\n              </td>\n            );\n          case 'mother':\n            return (\n              <td>\n                {person.mother !== '' && (\n                  <PersonName name={person.mother} sex=\"f\" />\n                )}\n              </td>\n            );\n          case 'father':\n            return (\n              <td>\n                {person.father !== '' && (\n                  <PersonName name={person.father} sex=\"m\" />\n                )}\n              </td>\n            );\n          case 'children':\n            return (\n              <td>\n                {person.children.map((child, index) => (\n                  <>\n                    <PersonName name={child.name} sex={child.sex} />\n                    {index !== person.children.length - 1 && ', '}\n                  </>\n                ))}\n              </td>\n            );\n          default:\n            return (\n              <td>{person[title]}</td>\n            );\n        }\n      })}\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  titles: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      sex: PropTypes.string,\n    })).isRequired,\n  }).isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      personName: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape(\n    { push: PropTypes.func },\n  ).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Person;\n","const getData = url => (\n  fetch(url).then(response => response.json())\n);\n\nexport default getData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst date = new Date();\n\nconst NewPerson = ({ currentPeople, addPerson, updateChildren, history }) => {\n  const [name, setName] = useState('');\n  const [sex, setSex] = useState('');\n  const [born, setBorn] = useState('');\n  const [died, setDied] = useState('');\n  const [mother, setMother] = useState('');\n  const [father, setFather] = useState('');\n\n  const setters = {\n    name: setName,\n    sex: setSex,\n    born: setBorn,\n    died: setDied,\n    mother: setMother,\n    father: setFather,\n  };\n\n  const handleNameChange = ({ target: { value } }) => {\n    setName(value.replace(/^ |[^a-zA-Z|\\s]+/g, ''));\n  };\n\n  const handleSelect = ({ target: { value } }, key) => {\n    setters[key](value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    addPerson(name.trim(), sex, born, died, mother, father);\n    updateChildren();\n\n    setName('');\n    setSex(sex);\n    setBorn('');\n    setDied('');\n    setMother('');\n    setFather('');\n\n    history.push('/people');\n  };\n\n  const availableYears = [];\n  const minWomanBirth = Math.min(...currentPeople\n    .filter(person => person.sex === 'f')\n    .map(person => person.born));\n  const minManBirth = Math.min(...currentPeople\n    .filter(person => person.sex === 'm')\n    .map(person => person.born));\n\n  for (let i = Math.max(minWomanBirth, minManBirth) + 16;\n    i <= date.getFullYear(); i += 1) {\n    availableYears.push(i);\n  }\n\n  return (\n    <form\n      className=\"new-person\"\n      onSubmit={handleSubmit}\n    >\n\n      <input\n        type=\"text\"\n        value={name}\n        placeholder=\"Enter name\"\n        onChange={handleNameChange}\n        className=\"new-person__name\"\n        required\n      />\n\n      <input\n        type=\"radio\"\n        name=\"sex\"\n        value=\"m\"\n        required={sex === ''}\n        id=\"male\"\n        onChange={event => handleSelect(event, 'sex')}\n      />\n      <label htmlFor=\"male\">male</label>\n      <input\n        type=\"radio\"\n        name=\"sex\"\n        value=\"f\"\n        required={sex === ''}\n        id=\"female\"\n        onChange={event => handleSelect(event, 'sex')}\n      />\n      <label htmlFor=\"female\">female</label>\n\n      <br />\n\n      <select\n        value={born}\n        onChange={event => handleSelect(event, 'born')}\n        className=\"new-person__year\"\n        required\n      >\n        <option value=\"\">born</option>\n        {availableYears.map(year => (\n          <option value={year} key={year}>{year}</option>\n        ))}\n      </select>\n\n      <select\n        value={died}\n        onChange={event => handleSelect(event, 'died')}\n        className=\"new-person__year\"\n        required\n      >\n        <option value=\"\">died</option>\n        {born && availableYears\n          .filter(yearOfDeath => yearOfDeath >= Number(born)\n            && yearOfDeath <= Number(born) + 149)\n          .map(year => (\n            <option value={year} key={year}>{year}</option>\n          ))}\n        {date.getFullYear() - born < 150\n        && (<option value={Infinity}>alive</option>)}\n      </select>\n\n      <br />\n\n      <select\n        value={mother}\n        onChange={event => handleSelect(event, 'mother')}\n        className=\"new-person__parent\"\n        required\n      >\n        <option value=\"\">Choose mother</option>\n        {born\n        && currentPeople\n          .filter(person => person.sex === 'f' && person.died >= born\n            && person.born <= born - 16)\n          .map(woman => woman.name)\n          .map(currentWoman => (\n            <option\n              value={currentWoman}\n              key={currentWoman}\n            >\n              {currentWoman}\n            </option>\n          ))}\n      </select>\n\n      <select\n        value={father}\n        onChange={event => handleSelect(event, 'father')}\n        className=\"new-person__parent\"\n        required\n      >\n        <option value=\"\">Choose father</option>\n        {born\n        && currentPeople\n          .filter(person => person.sex === 'm' && person.died >= born\n            && person.born <= born - 16)\n          .map(man => man.name)\n          .map(currentMan => (\n            <option value={currentMan} key={currentMan}>{currentMan}</option>\n          ))}\n      </select>\n\n      <br />\n\n      <button\n        type=\"submit\"\n        className=\"new-person__submit\"\n      >\n        Add Person\n      </button>\n    </form>\n\n  );\n};\n\nNewPerson.propTypes = {\n  currentPeople: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    mother: PropTypes.string.isRequired,\n    father: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      sex: PropTypes.string,\n    })).isRequired,\n  })).isRequired,\n  addPerson: PropTypes.func.isRequired,\n  updateChildren: PropTypes.func.isRequired,\n  history: PropTypes.shape(\n    { push: PropTypes.func },\n  ).isRequired,\n};\n\nexport default NewPerson;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport { DebounceInput } from 'react-debounce-input';\nimport Person from './Person';\nimport getData from './getDataApi';\nimport NewPerson from './NewPerson';\n\nconst peopleURL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst date = new Date();\n\nconst getPeopleWithChildren = listOfPeople => (\n  listOfPeople.map((person, index) => ({\n    ...person,\n    children: listOfPeople\n      .filter(child => (\n        child.father === person.name || child.mother === person.name)),\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    id: index + 1,\n  }))\n);\n\nconst PeopleTable = ({ match, history, location }) => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    loadPeopleFromServer();\n  }, []);\n\n  const loadPeopleFromServer = async() => {\n    try {\n      const listOfPeople = await getData(peopleURL);\n\n      setPeople([...getPeopleWithChildren(listOfPeople)]);\n    } catch {\n      setPeople([]);\n    }\n  };\n\n  const addPerson = (name, sex, born, died, mother, father) => {\n    setPeople(prevPeople => ([...prevPeople, {\n      name,\n      sex,\n      born: Number(born),\n      died: Number(died),\n      mother,\n      father,\n      children: prevPeople\n        .filter(child => (\n          child.father === name || child.mother === name)),\n      age: died < Infinity ? died - born : date.getFullYear() - born,\n      century:\n        died < Infinity ? Math.ceil(died / 100)\n          : Math.ceil(date.getFullYear() / 100),\n      id:\n        Math.max(...prevPeople.map(person => person.id)) + 1,\n    }]));\n  };\n\n  const updateChildren = () => {\n    setPeople(prevPeople => (prevPeople.map(person => ({\n      ...person,\n      children: prevPeople.filter(child => (\n        child.father === person.name || child.mother === person.name)),\n    }))));\n  };\n\n  const urlParams = new URLSearchParams(location.search);\n\n  const handleSearchingInputChange = ({ target: { value } }) => {\n    if (value === '') {\n      urlParams.delete('query');\n    } else {\n      urlParams.set('query', value.toLowerCase());\n    }\n\n    history.push({ search: urlParams.toString() });\n  };\n\n  const getSearchedPeople = (listOfPeople, searchingName) => (\n    listOfPeople.filter(person => (\n      person.name.toLowerCase().includes(searchingName)\n      || (person.father || '').toLowerCase()\n        .includes(searchingName)\n      || (person.mother || '').toLowerCase()\n        .includes(searchingName)\n    )));\n\n  const handleSortClick = (sortingTitle) => {\n    if (urlParams.get('sortBy') !== sortingTitle) {\n      urlParams.set('sortBy', sortingTitle);\n      urlParams.set('sortOrder', 'asc');\n    } else if (!urlParams.get('sortOrder')) {\n      urlParams.set('sortOrder', 'desc');\n    } else {\n      urlParams.set('sortOrder',\n        urlParams.get('sortOrder') === 'asc' ? 'desc' : 'asc');\n    }\n\n    history.push({ search: urlParams.toString() });\n  };\n\n  const getSortedPeople = (listOfPeople, sortingTitle) => (\n    [...listOfPeople].sort((firstPerson, secondPerson) => (\n      typeof firstPerson[sortingTitle] === 'string'\n        ? firstPerson[sortingTitle].localeCompare(secondPerson[sortingTitle])\n        : firstPerson[sortingTitle] - secondPerson[sortingTitle]\n    )));\n\n  const setSortBy = (listOfPeople, sortingTitle, sortingOrder) => {\n    if (sortingOrder === 'desc') {\n      return ([...getSortedPeople(listOfPeople, sortingTitle)].reverse());\n    }\n\n    return [...getSortedPeople(listOfPeople, sortingTitle)];\n  };\n\n  const titles = [\n    'id',\n    'name',\n    'sex',\n    'born',\n    'died',\n    'age',\n    'century',\n    'mother',\n    'father',\n    'children',\n  ];\n\n  let visiblePeople\n    = [...getSearchedPeople(people, urlParams.get('query') || '')];\n\n  visiblePeople = urlParams.get('sortBy')\n    ? [...setSortBy([...visiblePeople],\n      urlParams.get('sortBy'), urlParams.get('sortOrder') || 'asc')]\n    : [...visiblePeople];\n\n  return (\n    <>\n      <Switch>\n        <Route\n          path=\"/people/new\"\n          exact\n          render={() => (\n            <NewPerson\n              currentPeople={people}\n              addPerson={addPerson}\n              updateChildren={updateChildren}\n              match={match}\n              history={history}\n              location={location}\n            />\n          )}\n        />\n        <Route path=\"/people/:personName?\" exact>\n          <NavLink\n            to=\"/people/new\"\n            className=\"people__link people__link--add\"\n          >\n            Add new person\n          </NavLink>\n        </Route>\n      </Switch>\n      {match.url !== '/people/new' && (\n        <h3>\n          Currently visible people:\n          {' '}\n          {visiblePeople\n            .length}\n        </h3>\n      )}\n      {match.url !== '/people/new' && (\n        <DebounceInput\n          debounceTimeout={500}\n          onChange={handleSearchingInputChange}\n          className=\"people__search\"\n          type=\"text\"\n          placeholder=\"Search\"\n        />\n      )}\n      {match.url !== '/people/new' && (\n        <table className=\"people-table\">\n          <thead>\n            <tr>\n              {titles.map((title) => {\n                switch (title) {\n                  case 'mother':\n                  case 'father':\n                  case 'children':\n                    return (\n                      <th key={title}>{title.toUpperCase()}</th>\n                    );\n                  default:\n                    return (\n                      <th\n                        key={title}\n                        className={\n                          cn(\n                            'title--sortable',\n                            { 'title--active':\n                                urlParams.get('sortBy') === title }\n                          )}\n                        onClick={() => handleSortClick(title)}\n                      >\n                        {title.toUpperCase()}\n                      </th>\n                    );\n                }\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {visiblePeople\n              .map(currentPerson => (\n                <Person\n                  key={currentPerson.id}\n                  titles={titles}\n                  person={currentPerson}\n                  match={match}\n                  history={history}\n                  location={location}\n                />\n              ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n\nPeopleTable.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      personName: PropTypes.string,\n    }),\n  }).isRequired,\n  history: PropTypes.shape(\n    { push: PropTypes.func },\n  ).isRequired,\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport './App.css';\nimport PeopleTable from './PeopleTable';\n\nconst App = () => (\n  <div className=\"people\">\n    <NavLink to=\"/people\" className=\"people__link\">People</NavLink>\n    <Route path=\"/people/:personName?\" exact component={PeopleTable} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App test={123} />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}